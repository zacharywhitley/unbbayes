/* VERSION = 0.0.1 ORACLE-LIKE */
/* Non standard UnBBayes-PRM SQL script file. */
/* This file was generated by UnBBayes-PRM plugin on Sat Sep 04 10:35:30 BRT 2010 */
/* You may change the order of the statements, but please, do not change the statements themselves. */


CREATE TABLE "AttackPlan" (
	 "id" 	 VARCHAR2(300) 	 not null,
	 "isActivePlan" 	 VARCHAR2(300) 	 
);
ALTER TABLE "AttackPlan" ADD CONSTRAINT PK_AttackPlan PRIMARY KEY ("id");
ALTER TABLE "AttackPlan" ADD CONSTRAINT CK_isActivePlan CHECK ( "isActivePlan" IN ('true', 'false'));

CREATE TABLE "CellPhone" (
	 "id" 	 VARCHAR2(300) 	 not null
);
ALTER TABLE "CellPhone" ADD CONSTRAINT PK_CellPhone PRIMARY KEY ("id");

CREATE TABLE "PrsnOfIntrst" (
	 "id" 	 VARCHAR2(300) 	 not null
);
ALTER TABLE "PrsnOfIntrst" ADD CONSTRAINT PK_PrsnOfIntrst PRIMARY KEY ("id");

CREATE TABLE "Venue" (
	 "politicalImportance" 	 VARCHAR2(300) 	 ,
	 "id" 	 VARCHAR2(300) 	 not null
);
ALTER TABLE "Venue" ADD CONSTRAINT PK_Venue PRIMARY KEY ("id");
ALTER TABLE "Venue" ADD CONSTRAINT CK_politicalImportance CHECK ( "politicalImportance" IN ('high', 'low'));

CREATE TABLE "Rel_AttackPlan_Venue" (
	 "attackPlan_id" 	 VARCHAR2(300) 	 not null,
	 "venue_id" 	 VARCHAR2(300) 	 not null,
	 "isTarget" 	 VARCHAR2(300) 	 
);
ALTER TABLE "Rel_AttackPlan_Venue" ADD CONSTRAINT PK_NewPRMEntity1 PRIMARY KEY ();
ALTER TABLE "Rel_AttackPlan_Venue" ADD CONSTRAINT CK_isTarget CHECK ( "isTarget" IN ('true', 'false'));

ALTER TABLE "Rel_AttackPlan_Venue" ADD CONSTRAINT FK3 FOREIGN KEY ("attackPlan_id")  REFERENCES "AttackPlan" ("id");

ALTER TABLE "Rel_AttackPlan_Venue" ADD CONSTRAINT FK4 FOREIGN KEY ("venue_id")  REFERENCES "Venue" ("id");

/* Storing dependencies as in-table comments (this is a temporary solution to be solved in future releases) */
/* Format: <listOfParents>; {<listOfProbabilities>} */
/* The <listOfParents> is a comma separated list having the following format: <parentClass>.<parentColumn>(<aggregateFunction>){<listOfForeignKeys>} */
/* The ".<aggregateFunction>" is usually "mode" (with no double quotes) or white space if none. */
/* The <listOfForeignKeys> and <listOfProbabilities> are white space separated list. */
/* The [<listOfProbabilities>] is something like {0.1 0.9 0.9 0.1} */
/* If a foreign key in <listOfForeignKeys> is written as !<foreignKeyName>, then it will be marked as an inverse foreign key (one-to-many) */

COMMENT ON COLUMN AttackPlan.isActivePlan IS ' ;  { 0.01 0.99 }';
COMMENT ON COLUMN Venue.politicalImportance IS ' ;  { 0.05 0.95 }';
COMMENT ON COLUMN Rel_AttackPlan_Venue.isTarget IS 'AttackPlan.isActivePlan()[ FK3 ] , Venue.politicalImportance()[ FK4 ] ;  { 0.7 0.3 0.0 1.0 0.0030 0.997 0.0 1.0 }';
INSERT INTO "AttackPlan" (isActivePlan, id) VALUES ('null', 'ConfAtk');
INSERT INTO "PrsnOfIntrst" (id) VALUES ('V');
INSERT INTO "PrsnOfIntrst" (id) VALUES ('C');
INSERT INTO "PrsnOfIntrst" (id) VALUES ('AD');
INSERT INTO "PrsnOfIntrst" (id) VALUES ('P');
INSERT INTO "PrsnOfIntrst" (id) VALUES ('TL6');
INSERT INTO "Venue" (politicalImportance, id) VALUES ('null', 'ResC');
INSERT INTO "Venue" (politicalImportance, id) VALUES ('null', 'Conf');
INSERT INTO "Rel_AttackPlan_Venue" (isTarget, attackPlan_id, venue_id) VALUES ('null', 'ConfAtk', 'ResC');
INSERT INTO "Rel_AttackPlan_Venue" (isTarget, attackPlan_id, venue_id) VALUES ('null', 'ConfAtk', 'Conf');
