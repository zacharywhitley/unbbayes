/* VERSION = 0.0.1 ORACLE-LIKE */
/* Non standard UnBBayes-PRM SQL script file. */
/* This file was generated by UnBBayes-PRM plugin on Sat Sep 04 15:21:09 BRT 2010 */
/* You may change the order of the statements, but please, do not change the statements themselves. */


CREATE TABLE "AttackPlan" (
	 "id" 	 VARCHAR2(300) 	 not null,
	 "isActivePlan" 	 VARCHAR2(300) 	 
);
ALTER TABLE "AttackPlan" ADD CONSTRAINT PK_AttackPlan PRIMARY KEY ("id");
ALTER TABLE "AttackPlan" ADD CONSTRAINT CK_isActivePlan CHECK ( "isActivePlan" IN ('true', 'false'));

CREATE TABLE "CellPhone" (
	 "id" 	 VARCHAR2(300) 	 not null
);
ALTER TABLE "CellPhone" ADD CONSTRAINT PK_CellPhone PRIMARY KEY ("id");

CREATE TABLE "PrsnOfIntrst" (
	 "id" 	 VARCHAR2(300) 	 not null,
	 "isWeaponSupplier" 	 VARCHAR2(300) 	 ,
	 "explosiveResidueReport" 	 VARCHAR2(300) 	 
);
ALTER TABLE "PrsnOfIntrst" ADD CONSTRAINT PK_PrsnOfIntrst PRIMARY KEY ("id");
ALTER TABLE "PrsnOfIntrst" ADD CONSTRAINT CK_isWeaponSupplier CHECK ( "isWeaponSupplier" IN ('true', 'false'));
ALTER TABLE "PrsnOfIntrst" ADD CONSTRAINT CK_explosiveResidueReport CHECK ( "explosiveResidueReport" IN ('true', 'false'));

CREATE TABLE "Venue" (
	 "politicalImportance" 	 VARCHAR2(300) 	 ,
	 "id" 	 VARCHAR2(300) 	 not null
);
ALTER TABLE "Venue" ADD CONSTRAINT PK_Venue PRIMARY KEY ("id");
ALTER TABLE "Venue" ADD CONSTRAINT CK_politicalImportance CHECK ( "politicalImportance" IN ('high', 'low'));

CREATE TABLE "AttackPlanTarget" (
	 "attackPlan_id" 	 VARCHAR2(300) 	 not null,
	 "venue_id" 	 VARCHAR2(300) 	 not null,
	 "isTarget" 	 VARCHAR2(300) 	 ,
	 "id" 	 VARCHAR2(300) 	 not null
);
ALTER TABLE "AttackPlanTarget" ADD CONSTRAINT PK_AttackPlanTarget PRIMARY KEY ("id");
ALTER TABLE "AttackPlanTarget" ADD CONSTRAINT CK_isTarget CHECK ( "isTarget" IN ('true', 'false'));

ALTER TABLE "AttackPlanTarget" ADD CONSTRAINT FK_ATTACKPLANTARGET_PLAN FOREIGN KEY ("attackPlan_id")  REFERENCES "AttackPlan" ("id");

ALTER TABLE "AttackPlanTarget" ADD CONSTRAINT FK_ATTACKPLANTARGET_VENUE FOREIGN KEY ("venue_id")  REFERENCES "Venue" ("id");

CREATE TABLE "AgentAttackPlan" (
	 "prsnOfIntrst_id" 	 VARCHAR2(300) 	 not null,
	 "attackPlan_id" 	 VARCHAR2(300) 	 not null,
	 "isAgentOf" 	 VARCHAR2(300) 	 ,
	 "suppliesWpnMtrl" 	 VARCHAR2(300) 	 ,
	 "id" 	 VARCHAR2(300) 	 not null
);
ALTER TABLE "AgentAttackPlan" ADD CONSTRAINT PK_AgentAttackPlan PRIMARY KEY ("id");
ALTER TABLE "AgentAttackPlan" ADD CONSTRAINT CK_isAgentOf CHECK ( "isAgentOf" IN ('true', 'false'));
ALTER TABLE "AgentAttackPlan" ADD CONSTRAINT CK_suppliesWpnMtrl CHECK ( "suppliesWpnMtrl" IN ('true', 'false'));

ALTER TABLE "AgentAttackPlan" ADD CONSTRAINT FK_AGENTATTACKPLAN_AGENT FOREIGN KEY ("prsnOfIntrst_id")  REFERENCES "PrsnOfIntrst" ("id");

ALTER TABLE "AgentAttackPlan" ADD CONSTRAINT FK_AGENTATTACKPLAN_PLAN FOREIGN KEY ("attackPlan_id")  REFERENCES "AttackPlan" ("id");

CREATE TABLE "LocationReport" (
	 "prsnOfIntrst_id" 	 VARCHAR2(300) 	 not null,
	 "venue_id" 	 VARCHAR2(300) 	 not null,
	 "missingCarReport" 	 VARCHAR2(300) 	 ,
	 "HUMINTLocationReport" 	 VARCHAR2(300) 	 ,
	 "id" 	 VARCHAR2(300) 	 not null
);
ALTER TABLE "LocationReport" ADD CONSTRAINT PK_LocationReport PRIMARY KEY ("id");
ALTER TABLE "LocationReport" ADD CONSTRAINT CK_missingCarReport CHECK ( "missingCarReport" IN ('true', 'false'));
ALTER TABLE "LocationReport" ADD CONSTRAINT CK_HUMINTLocationReport CHECK ( "HUMINTLocationReport" IN ('true', 'false'));

ALTER TABLE "LocationReport" ADD CONSTRAINT FK_LOCATIONREPORT_AGENT FOREIGN KEY ("prsnOfIntrst_id")  REFERENCES "PrsnOfIntrst" ("id");

ALTER TABLE "LocationReport" ADD CONSTRAINT FK_LOCATIONREPORT_VENUE FOREIGN KEY ("venue_id")  REFERENCES "Venue" ("id");

CREATE TABLE "SocialNetwork" (
	 "agt1" 	 VARCHAR2(300) 	 not null,
	 "agt2" 	 VARCHAR2(300) 	 not null,
	 "SNRival" 	 VARCHAR2(300) 	 ,
	 "SNRelated" 	 VARCHAR2(300) 	 ,
	 "id" 	 VARCHAR2(300) 	 not null
);
ALTER TABLE "SocialNetwork" ADD CONSTRAINT PK_SocialNetwork PRIMARY KEY ("id");
ALTER TABLE "SocialNetwork" ADD CONSTRAINT CK_SNRival CHECK ( "SNRival" IN ('true', 'false'));
ALTER TABLE "SocialNetwork" ADD CONSTRAINT CK_SNRelated CHECK ( "SNRelated" IN ('true', 'false'));

ALTER TABLE "SocialNetwork" ADD CONSTRAINT FK_SOCIALNETWORK_AGT1 FOREIGN KEY ("agt1")  REFERENCES "PrsnOfIntrst" ("id");

ALTER TABLE "SocialNetwork" ADD CONSTRAINT FK_SOCIALNETWORK_AGT2 FOREIGN KEY ("agt2")  REFERENCES "PrsnOfIntrst" ("id");

CREATE TABLE "AgentLocation" (
	 "prsnOfIntrst_id" 	 VARCHAR2(300) 	 not null,
	 "venue_id" 	 VARCHAR2(300) 	 not null,
	 "residesAt" 	 VARCHAR2(300) 	 ,
	 "isExpectedAt" 	 VARCHAR2(300) 	 ,
	 "agentAt" 	 VARCHAR2(300) 	 ,
	 "id" 	 VARCHAR2(300) 	 not null
);
ALTER TABLE "AgentLocation" ADD CONSTRAINT PK_AgentLocation PRIMARY KEY ("id");
ALTER TABLE "AgentLocation" ADD CONSTRAINT CK_residesAt CHECK ( "residesAt" IN ('true', 'false'));
ALTER TABLE "AgentLocation" ADD CONSTRAINT CK_isExpectedAt CHECK ( "isExpectedAt" IN ('true', 'false'));
ALTER TABLE "AgentLocation" ADD CONSTRAINT CK_agentAt CHECK ( "agentAt" IN ('true', 'false'));

ALTER TABLE "AgentLocation" ADD CONSTRAINT FK_AGENTLOCATION_AGENT FOREIGN KEY ("prsnOfIntrst_id")  REFERENCES "PrsnOfIntrst" ("id");

ALTER TABLE "AgentLocation" ADD CONSTRAINT FK_AGENTLOCATION_VENUE FOREIGN KEY ("venue_id")  REFERENCES "Venue" ("id");

CREATE TABLE "MeetingVenue" (
	 "venue_id" 	 VARCHAR2(300) 	 not null,
	 "attackPlan_id" 	 VARCHAR2(300) 	 not null,
	 "isMeetingVenue" 	 VARCHAR2(300) 	 ,
	 "id" 	 VARCHAR2(300) 	 not null
);
ALTER TABLE "MeetingVenue" ADD CONSTRAINT PK_MeetingVenue PRIMARY KEY ("id");
ALTER TABLE "MeetingVenue" ADD CONSTRAINT CK_isMeetingVenue CHECK ( "isMeetingVenue" IN ('true', 'false'));

ALTER TABLE "MeetingVenue" ADD CONSTRAINT FK_MEETINGVENUE_VENUE FOREIGN KEY ("venue_id")  REFERENCES "Venue" ("id");

ALTER TABLE "MeetingVenue" ADD CONSTRAINT FK_MEETINGVENUE_PLAN FOREIGN KEY ("attackPlan_id")  REFERENCES "AttackPlan" ("id");

CREATE TABLE "PlanExecution" (
	 "prsnOfIntrst_id" 	 VARCHAR2(300) 	 not null,
	 "attackPlan_id" 	 VARCHAR2(300) 	 not null,
	 "Executes" 	 VARCHAR2(300) 	 ,
	 "PlantsExplosives" 	 VARCHAR2(300) 	 ,
	 "id" 	 VARCHAR2(300) 	 not null
);
ALTER TABLE "PlanExecution" ADD CONSTRAINT PK_PlanExecution PRIMARY KEY ("id");
ALTER TABLE "PlanExecution" ADD CONSTRAINT CK_Executes CHECK ( "Executes" IN ('true', 'false'));
ALTER TABLE "PlanExecution" ADD CONSTRAINT CK_PlantsExplosives CHECK ( "PlantsExplosives" IN ('true', 'false'));

ALTER TABLE "PlanExecution" ADD CONSTRAINT FK_PLANEXECUTION_AGENT FOREIGN KEY ("prsnOfIntrst_id")  REFERENCES "PrsnOfIntrst" ("id");

ALTER TABLE "PlanExecution" ADD CONSTRAINT FK_PLANEXECUTION_PLAN FOREIGN KEY ("attackPlan_id")  REFERENCES "AttackPlan" ("id");

/* Storing dependencies as in-table comments (this is a temporary solution to be solved in future releases) */
/* Format: <listOfParents>; {<listOfProbabilities>} */
/* The <listOfParents> is a comma separated list having the following format: <parentClass>.<parentColumn>(<aggregateFunction>){<listOfForeignKeys>} */
/* The ".<aggregateFunction>" is usually "mode" (with no double quotes) or white space if none. */
/* The <listOfForeignKeys> and <listOfProbabilities> are white space separated list. */
/* The [<listOfProbabilities>] is something like {0.1 0.9 0.9 0.1} */
/* If a foreign key in <listOfForeignKeys> is written as !<foreignKeyName>, then it will be marked as an inverse foreign key (one-to-many) */

COMMENT ON COLUMN AttackPlan.isActivePlan IS ' ;  { 0.01 0.99 }';
COMMENT ON COLUMN PrsnOfIntrst.isWeaponSupplier IS ' ;  { 0.01 0.99 }';
COMMENT ON COLUMN PrsnOfIntrst.explosiveResidueReport IS ' ;  { 1.0 0.0 }';
COMMENT ON COLUMN Venue.politicalImportance IS ' ;  { 0.05 0.95 }';
COMMENT ON COLUMN AttackPlanTarget.isTarget IS 'AttackPlan.isActivePlan()[ FK_ATTACKPLANTARGET_PLAN ] , Venue.politicalImportance()[ FK_ATTACKPLANTARGET_VENUE ] ;  { 0.7 0.3 0.0 1.0 0.0030 0.997 0.0 1.0 }';
COMMENT ON COLUMN AgentAttackPlan.isAgentOf IS 'PrsnOfIntrst.isWeaponSupplier()[ FK_AGENTATTACKPLAN_AGENT ] , AttackPlan.isActivePlan()[ FK_AGENTATTACKPLAN_PLAN ] ;  { 1.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 }';
COMMENT ON COLUMN AgentAttackPlan.suppliesWpnMtrl IS ' ;  { 1.0 0.0 }';
COMMENT ON COLUMN LocationReport.missingCarReport IS ' ;  { 1.0 0.0 }';
COMMENT ON COLUMN LocationReport.HUMINTLocationReport IS ' ;  { 1.0 0.0 }';
COMMENT ON COLUMN SocialNetwork.SNRival IS ' ;  { 0.01 0.99 }';
COMMENT ON COLUMN SocialNetwork.SNRelated IS ' ;  { 1.0 0.0 }';
COMMENT ON COLUMN AgentLocation.residesAt IS ' ;  { 0.0010 0.999 }';
COMMENT ON COLUMN AgentLocation.isExpectedAt IS ' ;  { 1.0 0.0 }';
COMMENT ON COLUMN AgentLocation.agentAt IS ' ;  { 1.0 0.0 }';
COMMENT ON COLUMN MeetingVenue.isMeetingVenue IS ' ;  { 1.0 0.0 }';
COMMENT ON COLUMN PlanExecution.Executes IS ' ;  { 1.0 0.0 }';
COMMENT ON COLUMN PlanExecution.PlantsExplosives IS ' ;  { 1.0 0.0 }';
INSERT INTO "AttackPlan" (id, isActivePlan) VALUES ('ConfAtk', NULL);
INSERT INTO "PrsnOfIntrst" (id, isWeaponSupplier, explosiveResidueReport) VALUES ('V', NULL, NULL);
INSERT INTO "PrsnOfIntrst" (id, isWeaponSupplier, explosiveResidueReport) VALUES ('C', NULL, NULL);
INSERT INTO "PrsnOfIntrst" (id, isWeaponSupplier, explosiveResidueReport) VALUES ('AD', NULL, NULL);
INSERT INTO "PrsnOfIntrst" (id, isWeaponSupplier, explosiveResidueReport) VALUES ('P', NULL, NULL);
INSERT INTO "PrsnOfIntrst" (id, isWeaponSupplier, explosiveResidueReport) VALUES ('TL6', NULL, NULL);
INSERT INTO "Venue" (politicalImportance, id) VALUES (NULL, 'ResC');
INSERT INTO "Venue" (politicalImportance, id) VALUES (NULL, 'Conf');
INSERT INTO "AttackPlanTarget" (venue_id, isTarget, attackPlan_id) VALUES ('ResC', NULL, 'ConfAtk');
INSERT INTO "AttackPlanTarget" (venue_id, isTarget, attackPlan_id) VALUES ('Conf', NULL, 'ConfAtk');
