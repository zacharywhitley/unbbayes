net
{
     node_size = (0 0);
     name = "New BN";
     UnBBayes_Color_Probabilistic_Description = "-256";
     UnBBayes_Color_Probabilistic_Explanation = "-16711936";
}

decision DoTransition
{
     label = "D4";
     position = (135 193);
     states = ("no" "yes");
}

utility Cost
{
     label = "U5";
     position = (147 287);
}

utility Retribution
{
     label = "U6";
     position = (428 474);
}

node hasSuggestion
{
     label = "C7";
     position = (126 37);
     states = ("no" "yes");
}

node hasApplicationRequirement
{
     label = "C8";
     position = (227 17);
     states = ("no" "yes");
}

node UserSatisfaction
{
     label = "C9";
     position = (415 373);
     states = ("State 0" "State 1" "State 2");
}

decision doTransition2
{
     label = "D10";
     position = (732 205);
     states = ("no" "yes");
}

utility cost2
{
     label = "U11";
     position = (757 300);
}

node hasApplicationRequirement2
{
     label = "C12";
     position = (510 15);
     states = ("no" "yes");
}

node hasSuggestion2
{
     label = "C13";
     position = (718 36);
     states = ("State 0" "State 1");
}

node correctSuggestion
{
     label = "C14";
     position = (242 178);
     states = ("State 0" "State 1");
}

node correctSuggestion2
{
     label = "C15";
     position = (581 157);
     states = ("State 0" "State 1");
}

node usabilityScore
{
     label = "C16";
     position = (445 161);
     states = ("State 0" "State 1" "State 2" "State 3" "State 4");
}

node hasFeature1
{
     label = "C17";
     position = (243 366);
     states = ("State 0" "State 1");
}

node hasFeature2
{
     label = "C18";
     position = (591 359);
     states = ("State 0" "State 1");
}

potential (DoTransition | hasSuggestion)
{
}

potential (Cost | DoTransition)
{
 data = ( 0.0 
 0.0 );
}

potential (Retribution | UserSatisfaction)
{
 data = ( 0.0 
 0.0 
 0.0 );
}

potential (hasSuggestion | hasFeature1)
{
 data = (( 0.5 0.5 )
( 0.5 0.5 ));
}

potential (hasApplicationRequirement)
{
 data = ( 0.5 0.5 );
}

potential (UserSatisfaction | correctSuggestion2 hasFeature2 hasFeature1 usabilityScore correctSuggestion)
{
 data = (((((( 0.33333334 0.33333334 0.33333334 )
( 0.33333334 0.33333334 0.33333334 ))
(( 0.33333334 0.33333334 0.33333334 )
( 0.33333334 0.33333334 0.33333334 ))
(( 0.33333334 0.33333334 0.33333334 )
( 0.33333334 0.33333334 0.33333334 ))
(( 0.33333334 0.33333334 0.33333334 )
( 0.33333334 0.33333334 0.33333334 ))
(( 0.33333334 0.33333334 0.33333334 )
( 0.33333334 0.33333334 0.33333334 )))
((( 0.33333334 0.33333334 0.33333334 )
( 0.33333334 0.33333334 0.33333334 ))
(( 0.33333334 0.33333334 0.33333334 )
( 0.33333334 0.33333334 0.33333334 ))
(( 0.33333334 0.33333334 0.33333334 )
( 0.33333334 0.33333334 0.33333334 ))
(( 0.33333334 0.33333334 0.33333334 )
( 0.33333334 0.33333334 0.33333334 ))
(( 0.33333334 0.33333334 0.33333334 )
( 0.33333334 0.33333334 0.33333334 ))))
(((( 0.33333334 0.33333334 0.33333334 )
( 0.33333334 0.33333334 0.33333334 ))
(( 0.33333334 0.33333334 0.33333334 )
( 0.33333334 0.33333334 0.33333334 ))
(( 0.33333334 0.33333334 0.33333334 )
( 0.33333334 0.33333334 0.33333334 ))
(( 0.33333334 0.33333334 0.33333334 )
( 0.33333334 0.33333334 0.33333334 ))
(( 0.33333334 0.33333334 0.33333334 )
( 0.33333334 0.33333334 0.33333334 )))
((( 0.33333334 0.33333334 0.33333334 )
( 0.33333334 0.33333334 0.33333334 ))
(( 0.33333334 0.33333334 0.33333334 )
( 0.33333334 0.33333334 0.33333334 ))
(( 0.33333334 0.33333334 0.33333334 )
( 0.33333334 0.33333334 0.33333334 ))
(( 0.33333334 0.33333334 0.33333334 )
( 0.33333334 0.33333334 0.33333334 ))
(( 0.33333334 0.33333334 0.33333334 )
( 0.33333334 0.33333334 0.33333334 )))))
((((( 0.33333334 0.33333334 0.33333334 )
( 0.33333334 0.33333334 0.33333334 ))
(( 0.33333334 0.33333334 0.33333334 )
( 0.33333334 0.33333334 0.33333334 ))
(( 0.33333334 0.33333334 0.33333334 )
( 0.33333334 0.33333334 0.33333334 ))
(( 0.33333334 0.33333334 0.33333334 )
( 0.33333334 0.33333334 0.33333334 ))
(( 0.33333334 0.33333334 0.33333334 )
( 0.33333334 0.33333334 0.33333334 )))
((( 0.33333334 0.33333334 0.33333334 )
( 0.33333334 0.33333334 0.33333334 ))
(( 0.33333334 0.33333334 0.33333334 )
( 0.33333334 0.33333334 0.33333334 ))
(( 0.33333334 0.33333334 0.33333334 )
( 0.33333334 0.33333334 0.33333334 ))
(( 0.33333334 0.33333334 0.33333334 )
( 0.33333334 0.33333334 0.33333334 ))
(( 0.33333334 0.33333334 0.33333334 )
( 0.33333334 0.33333334 0.33333334 ))))
(((( 0.33333334 0.33333334 0.33333334 )
( 0.33333334 0.33333334 0.33333334 ))
(( 0.33333334 0.33333334 0.33333334 )
( 0.33333334 0.33333334 0.33333334 ))
(( 0.33333334 0.33333334 0.33333334 )
( 0.33333334 0.33333334 0.33333334 ))
(( 0.33333334 0.33333334 0.33333334 )
( 0.33333334 0.33333334 0.33333334 ))
(( 0.33333334 0.33333334 0.33333334 )
( 0.33333334 0.33333334 0.33333334 )))
((( 0.33333334 0.33333334 0.33333334 )
( 0.33333334 0.33333334 0.33333334 ))
(( 0.33333334 0.33333334 0.33333334 )
( 0.33333334 0.33333334 0.33333334 ))
(( 0.33333334 0.33333334 0.33333334 )
( 0.33333334 0.33333334 0.33333334 ))
(( 0.33333334 0.33333334 0.33333334 )
( 0.33333334 0.33333334 0.33333334 ))
(( 0.33333334 0.33333334 0.33333334 )
( 0.33333334 0.33333334 0.33333334 ))))));
}

potential (doTransition2 | hasSuggestion2 DoTransition)
{
}

potential (cost2 | doTransition2)
{
 data = ( 0.0 
 0.0 );
}

potential (hasApplicationRequirement2)
{
 data = ( 0.5 0.5 );
}

potential (hasSuggestion2 | hasFeature2)
{
 data = (( 0.5 0.5 )
( 0.5 0.5 ));
}

potential (correctSuggestion | hasApplicationRequirement hasSuggestion)
{
 data = ((( 0.5 0.5 )
( 0.5 0.5 ))
(( 0.5 0.5 )
( 0.5 0.5 )));
}

potential (correctSuggestion2 | hasApplicationRequirement2 hasSuggestion2)
{
 data = ((( 0.5 0.5 )
( 0.5 0.5 ))
(( 0.5 0.5 )
( 0.5 0.5 )));
}

potential (usabilityScore | hasSuggestion hasSuggestion2)
{
 data = ((( 0.2 0.2 0.2 0.2 0.2 )
( 0.2 0.2 0.2 0.2 0.2 ))
(( 0.2 0.2 0.2 0.2 0.2 )
( 0.2 0.2 0.2 0.2 0.2 )));
}

potential (hasFeature1)
{
 data = ( 0.5 0.5 );
}

potential (hasFeature2)
{
 data = ( 0.5 0.5 );
}

